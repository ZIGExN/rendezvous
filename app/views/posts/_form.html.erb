<%= form_for(@post) do |f| %>

  <% if @post.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@post.errors.count, "error") %> prohibited this post from being saved:</h2>

      <ul>
      <% @post.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="row">

    <div class="col-md-10">
      <div class="field">
        <div class="input-group">
          <span class="input-group-addon"><%= f.label :title %></span>
          <%= f.text_field :title, class: 'form-control' %>
        </div>
      </div>

      <div class="field">
        <div class="input-group">
          <span class="input-group-addon"><%= f.label :tags %></span>
          <%= hidden_field :post, :tags, id: 'post_tags', style: 'width:300px', value: @post.tags.pluck(:name).join(',') %>
        </div>
      </div>
    </div>

    <div class="col-md-2">
      <div class="actions">
        <%= f.submit class: 'btn btn-primary', id: 'save_button' %>
      </div>
    </div>

  </div>

  <br>

  <div class="row">

    <div class="col-xs-6 col-md-6">

      <div class="field">
        <!-- <%= f.label :body %><br> -->
        <%= f.text_area :body, class: 'autosize editor disable-tab' %>
      </div>

    </div><!--/span-->

    <div class="col-xs-12 col-sm-6 col-md-6">

      <div class="box-text">
        <div id="post_preview">
          <%#= h_application_format_markdown(sample_body).html_safe %>
        </div>
      </div>

    </div><!--/span-->

  </div><!--/row-->

<% end %>

<% content_for :footer_js do %>
<script type="text/javascript">

  $(function(){
    'use strict';

    var confirmUnload = function() {
      return '前のページに戻りますか？';
    };
    $(window).on('beforeunload', confirmUnload);
    $('#save_button').on('click', function(){
      $(window).off('beforeunload', confirmUnload);
    });

    // Automaticaly change textarea height.
    $('textarea.autosize').autosize();

    // disable tab key
    $('.disable-tab').on('keydown', function(e) {
      var $this = $(this);
      var keyCode = e.keyCode || e.which;

      if (keyCode === 9) {
        e.preventDefault();
        var start = $this.get(0).selectionStart;
        var end = $this.get(0).selectionEnd;

        // set textarea value to: text before caret + tab + text after caret
        $this.val($this.val().substring(0, start) +
                    '\t' +
                    $this.val().substring(end));

        // put caret at right position again
        $this.get(0).selectionStart =
        $this.get(0).selectionEnd = start + 1;
      } else if (keyCode === 13) {
        var val = $this.val();
        var start = $this.get(0).selectionStart;
        var bl = val.lastIndexOf("\n", start-1);
        var line = val.substring(bl, start);
        var lm = line.match(/^\s+/);
        var ns = lm ? lm[0].length - 1 : 0;
        var nv = val.substring(0, start) + "\n";
        for (var i=0; i<ns; i++) {
          nv += "\t";
        }
        $this.val(nv+val.substring(start))
        $this.get(0).selectionStart =
        $this.get(0).selectionEnd = start + ns + 1;
        e.preventDefault();
      }
    });

    // new post tags
    $('#post_tags').select2({
      tags: <%= raw Tag.all.pluck(:name).to_json %>
    });

    // Preview post.
    var load_preview = function(){
      console.log('load_preview')
      var text = $('#post_body').val();
      var csrfToken = $("meta[name='csrf-token']").attr('content');
      $.post('/posts/preview.api', {
        'text': text,
        'authenticity_token': csrfToken
      })
      .done(function(data){
        $('#post_preview').html(data);
      });
    };
    $('#post_body').on('keyup mouseup', load_preview);
    $('#post_body').on('keyup mouseup', function(){
      console.log('faij')
    });

    load_preview();
  });
</script>
<% end %>
