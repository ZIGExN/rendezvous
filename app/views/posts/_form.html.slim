#post-form
  = form_for(@post) do |f|
    - if @post.errors.any?
      #error_explanation
        h2
          = pluralize(@post.errors.count, "error")
          | prohibited this post from being saved:
        ul
          - @post.errors.full_messages.each do |msg|
            li= msg
    .row
      .col-xs-10
        .field
          .input-group
            span.input-group-addon= f.label :title
            = f.text_field :title, class: 'form-control mod-mdEditor-title'

        .field
          .input-group
            span.input-group-addon= f.label :tags
            = hidden_field :post, :tags, class: 'mod-mdEditor-tags', style: 'width:300px', value: @post.tags.map{ |_tag| _tag.name }.join(',')

      .col-xs-2
        p.actions
          = f.submit class: 'btn btn-primary js-disable-confirm-unload', id: 'save_button'
        p.actions
          = f.check_box :is_draft
          = f.label :is_draft, "下書き保存"

    br/
    .row
      .col-xs-6.col-md-6
        .field
          = f.text_area :body, class: 'mod-mdEditor-body'
      .col-xs-12.col-sm-6.col-md-6
        .box-text
          .text-box.body.viewer.github.mod-mdEditor-preview

input#fileupload data-url="/apis/file_receiver" multiple="" name="files[]" style="display:none" type="file" /

- content_for :footer_js do
  javascript:
    $.setConfirmUnload();

    $('#post-form').mod_mdEditor({end_point: '/apis/markdown_preview'});

    $.mod_fileuploader({
      $input: $('#fileupload'),
      $textarea: $('.mod-mdEditor-body')
    });

    // 下書き保存
    $('.btn-save-draft').on('click', function(e){
      e.preventDefault();
      var val = $('.mod-mdEditor-body').val();
      console.log(val);
    });

    // mention補完
    // TODO: mod-md-editorに入れる？
    $('textarea').textcomplete([
      { // html
        mentions: ['yuku_t'],
        match: /\B@([^\B]*)$/,
        search: function (term, callback) {
          $.getJSON('/apis/user_mention', { q: term })
            .done(function (resp) { callback(resp); })
            .fail(function ()     { callback([]);   });
        },
        index: 1,
        replace: function (mention) {
          return '@' + mention + ' ';
        }
      }
    ]).on({
      'textComplete:select': function (e, value) {
        console.log('textComplete:select ' + value);
      },
      'textComplete:show': function (e) {
        console.log('textComplete:show');
        $(this).data('autocompleting', true);
      },
      'textComplete:hide': function (e) {
        console.log('textComplete:hide');
        $(this).data('autocompleting', false);
      }
    });
    // .overlay([
    //   {
    //     match: /\B@\w+/g,
    //     css: {
    //       'background-color': '#d8dfea'
    //     }
    //   }
    // ]);


  css:
    .textcomplete-wrapper {
      width: 100%;
    }
